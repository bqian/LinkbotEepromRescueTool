import "nanopb.proto";
//import "rpc-options.proto";
import "commontypes.proto";
import "rpc.proto";
package barobo.Daemon;

message TcpEndpoint {
    required string address = 1 [(nanopb).max_size = 64];
    required uint32 port = 2;
}

// Methods

message getDaemonVersionString {
    message In {}
    message Result {
        required string value = 1 [(nanopb).max_size = 128];
    }
}

message resolveSerialId {
    message In {
        required barobo.SerialId serialId = 1;
    }
    message Result {
        required Status status = 1;
        required TcpEndpoint endpoint = 2;
    }
}

// If the daemon has acquired the dongle, relinquish it. Attempt to (re)acquire
// it after the specified time in seconds.
message cycleDongle {
    message In {
        required uint32 seconds = 1;
    }
    message Result {}
}

message sendRobotPing {
    message In {
        repeated SerialId destinations = 1 [(nanopb).max_count = 8];
        optional uint32 peripheralResetMask = 2;
    }
    message Result {
        required Status status = 1;
    }
}

// TODO: getDongleSerialId method

// Broadcasts

message dongleEvent {
    required Status status = 1;
    required barobo.rpc.VersionTriplet firmwareVersion = 2;
}

message robotEvent {
    required barobo.SerialId serialId = 1;
    required barobo.rpc.VersionTriplet firmwareVersion = 2;
    required barobo.rpc.VersionTriplet rpcVersion = 3;
    required barobo.rpc.VersionTriplet interfaceVersion = 4;
}
